{
  "name": "HubSpot Basic Actions Skill",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2022-08-10T04:10:01.789Z",
  "updated": "2023-03-09T04:29:02.758Z",
  "language": "en",
  "skill_id": "3ac29c62-cad4-4dd3-bcaa-4621dca17e37",
  "workspace": {
    "actions": [
      {
        "steps": [
          {
            "step": "step_204",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "What would you like to ask?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_204",
            "next_step": "step_971"
          },
          {
            "step": "step_971",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Just double checking, you would like to ask: "
                          },
                          {
                            "variable": "step_204"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text": "I'm sorry, I did not catch that, please restate your response."
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_971",
            "next_step": "step_346"
          },
          {
            "step": "step_346",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_204"
                  },
                  "skill_variable": "Question"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/v1/chat/completions",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "c5441826750007b225dd3337231d23284d1f801727ee85d4dc27a28786eab71b",
                  "catalog_item_id": "046e66e7-00b9-4a53-92ac-e2ea18cc5f73"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "\"gpt-3.5-turbo\""
                      },
                      "parameter": "model"
                    },
                    {
                      "value": {
                        "expression": "[{\"role\":\"user\", \"content\": ${Question}}]"
                      },
                      "parameter": "messages"
                    }
                  ]
                },
                "result_variable": "step_346_result_1"
              }
            },
            "variable": "step_346",
            "condition": {
              "eq": [
                {
                  "variable": "step_971"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_574"
          },
          {
            "step": "step_574",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "ChatGPTResponse"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_346_result_1.body.choices}[0].message.content"
                  },
                  "skill_variable": "ChatGPTResponse"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_574"
          }
        ],
        "title": "I'd like to ask chatgpt something",
        "action": "action_43232",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_43232_intent_12923"
        },
        "variables": [
          {
            "title": "What would you like to ask?",
            "variable": "step_204",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_346",
            "data_type": "any"
          },
          {
            "variable": "step_346_result_1",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_574",
            "data_type": "any"
          },
          {
            "title": "Just double checking, you would like to ask: {variable}",
            "variable": "step_971",
            "data_type": "yes_no"
          }
        ],
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_43232",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_43232_intent_12923",
        "examples": [
          {
            "text": "I'd like to ask chatgpt something"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "sys-date",
        "values": []
      },
      {
        "entity": "sys-number",
        "values": []
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "ChatGPTResponse",
        "variable": "ChatGPTResponse",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "choices",
        "variable": "choices",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "hs_pipeline_stage",
        "variable": "hs_pipeline_stage",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "1"
        }
      },
      {
        "title": "HubSpot Email",
        "variable": "HubSpot_Email",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "scalar": "something@example.com"
        }
      },
      {
        "title": "HubSpot First Name",
        "variable": "HubSpot_First_Name",
        "data_type": "any",
        "description": "",
        "default_value": {
          "scalar": "Your First Name"
        }
      },
      {
        "title": "HubSpot Last Name",
        "variable": "HubSpot_Last_Name",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "Membership",
        "variable": "Membership",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "query_properties",
        "variable": "query_properties",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "scalar": "\"membership_status,createdate,email,firstname,lastname,hs_object_id\""
        }
      },
      {
        "title": "Question",
        "variable": "Question",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "subject",
        "variable": "subject",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "scalar": "Charge Dispute"
        }
      },
      {
        "title": "ticketId",
        "variable": "ticketId",
        "data_type": "number",
        "description": "ID of ticket being queried"
      },
      {
        "title": "ticketObject1",
        "variable": "ticketObject1",
        "data_type": "any",
        "description": "First ticket result."
      },
      {
        "title": "ticketObject1_id",
        "variable": "ticketObject1_id",
        "data_type": "any",
        "description": "ID of first ticket object."
      },
      {
        "title": "ticketObject1_name",
        "variable": "ticketObject1_name",
        "data_type": "any",
        "description": "Name of first ticket object."
      },
      {
        "title": "ticketObject1_properties",
        "variable": "ticketObject1_properties",
        "data_type": "any",
        "description": "Properties of first ticket object."
      },
      {
        "title": "ticketObject2",
        "variable": "ticketObject2",
        "data_type": "any",
        "description": "Second ticket result."
      },
      {
        "title": "ticketObject2_id",
        "variable": "ticketObject2_id",
        "data_type": "any",
        "description": "ID of second ticket object."
      },
      {
        "title": "ticketObject2_name",
        "variable": "ticketObject2_name",
        "data_type": "any",
        "description": "Name of second ticket object."
      },
      {
        "title": "ticketObject2_properties",
        "variable": "ticketObject2_properties",
        "data_type": "any",
        "description": "Properties of second ticket object."
      },
      {
        "title": "ticketObject3",
        "variable": "ticketObject3",
        "data_type": "any",
        "description": "Third ticket result."
      },
      {
        "title": "ticketObject3_id",
        "variable": "ticketObject3_id",
        "data_type": "any",
        "description": "ID of third ticket object."
      },
      {
        "title": "ticketObject3_name",
        "variable": "ticketObject3_name",
        "data_type": "any",
        "description": "Name of third ticket object."
      },
      {
        "title": "ticketObject3_properties",
        "variable": "ticketObject3_properties",
        "data_type": "any",
        "description": "Properties of third ticket object."
      },
      {
        "title": "ticketStatus",
        "variable": "ticketStatus",
        "data_type": "any",
        "description": "Interpreted status of ticket."
      }
    ],
    "data_types": [],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {}
      },
      "launch_mode": {},
      "topic_switch": {
        "enabled": true,
        "messages": {
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Please reply back with yes or no"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to return to your previous topic "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          }
        },
        "max_tries": 3
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "intent_classification": {
        "training_backend_version": "v2"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant 1afaf69c-8cc4-4821-8b87-003bd45e86fb",
  "assistant_id": "cc8230ca-b6bf-4b34-b74a-cbd5f6a5a7df",
  "workspace_id": "3ac29c62-cad4-4dd3-bcaa-4621dca17e37",
  "dialog_settings": {},
  "next_snapshot_version": "2"
}